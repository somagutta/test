{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "chinnabh",
            "metadata": {
              "description": "Username for the Virtual Machine."
            }
          },
        "projectName": {
            "type": "string",
            "defaultValue": "BHAZ",
            "metadata": {
              "description": "Specifies a name for generating resource names."
            }
          },
        "subnetName": {
              "defaultValue": "default",
              "type": "String"
          },
        "serial": {
              "defaultValue": "0000000",
              "type": "String"
          },
        "env": {
              "defaultValue": "P",
              "type": "String"
          },
        "adminPassword": {
            "type": "secureString",
            "minLength": 12,
            "defaultValue": "pPgu75TYJxAKm2Zm",
            "metadata": {
              "description": "Password for the Virtual Machine."
            }
          },
        "virtualNetworkId": {
              "defaultValue": "/subscriptions/a74239cc-d361-42d0-8b19-02689f54200d/resourceGroups/testarm/providers/Microsoft.Network/virtualNetworks/test",
              "type": "String"
          },
        "imageRefId": {
              "defaultValue": "/subscriptions/a74239cc-d361-42d0-8b19-02689f54200d/resourceGroups/testarm/providers/Microsoft.Compute/galleries/testarmlinuxcomputegallery/images/win-image",
              "type": "String"
          },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "[toLower(format('{0}-{1}', parameters('vmName'), uniqueString(resourceGroup().id, parameters('vmName'))))]",
            "metadata": {
              "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
          },
        "publicIpName": {
            "type": "string",
            "defaultValue": "myPublicIP",
            "metadata": {
              "description": "Name for the Public IP used to access the Virtual Machine."
            }
          },
        "publicIPAllocationMethod": {
            "type": "string",
            "defaultValue": "Dynamic",
            "allowedValues": [
              "Dynamic",
              "Static"
            ],
            "metadata": {
              "description": "Allocation method for the Public IP used to access the Virtual Machine."
            }
          },
        "publicIpSku": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
              "Basic",
              "Standard"
            ],
            "metadata": {
              "description": "SKU for the Public IP used to access the Virtual Machine."
            }
          },
        "OSVersion": {
            "type": "string",
            "defaultValue": "2019-datacenter-gensecond",
            "allowedValues": [
              "2019-datacenter-gensecond",
              "2019-datacenter-core-gensecond",
              "2019-datacenter-core-smalldisk-gensecond",
              "2019-datacenter-core-with-containers-gensecond",
              "2019-datacenter-core-with-containers-smalldisk-g2",
              "2019-datacenter-smalldisk-gensecond",
              "2019-datacenter-with-containers-gensecond",
              "2019-datacenter-with-containers-smalldisk-g2",
              "2016-datacenter-gensecond"
            ],
            "metadata": {
              "description": "The Windows version for the VM. This will pick a fully patched Gen2 image of this given Windows version."
            }
          },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
              "description": "Size of the virtual machine."
            }
          },
          "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
              "description": "Location for all resources."
            }
          },
          "vmName": {
            "type": "string",
            "defaultValue": "simple-vm",
            "metadata": {
              "description": "Name of the virtual machine."
            }
          },
        "numberOfInstances": {
            "type": "int",
            "defaultValue": 4,
            "minValue": 2,
            "maxValue": 100,
            "metadata": {
                "description": "Number of VMs to deploy, limit 398 since there is an 800 resource limit for a single template deployment"
            }
        },
        "OS": {
            "type": "string",
            "defaultValue": "Ubuntu",
            "allowedValues": [
                "Ubuntu",
                "Windows"
            ],
            "metadata": {
                "description": "OS Platform for the VM"
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "defaultValue": "password",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        }
    },
    "variables": {
        "virtualNetworkName": "test",
        "addressPrefix": "10.0.0.0/16",
        "vnetId": "[parameters('virtualNetworkId')]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "subnet1Name": "Subnet-1",
        "subnet2Name": "Subnet-2",
        "subnet1Prefix": "10.0.0.0/24",
        "subnet2Prefix": "10.0.1.0/24",
        "availabilitySetName": "AvSet",
        "vmName": "[concat(parameters('projectName'), parameters('os'), parameters('serial'))]",
        "imageReference": {
            "Ubuntu": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "18.04-LTS",
                "version": "latest"
            },
            "Windows": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2019-Datacenter",
                "version": "latest"
            }
        },
        "networkSecurityGroupName": "default-NSG",
        "nsgOsPort": {
            "Ubuntu": "22",
            "Windows": "3389"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[concat(variables('availabilitySetName'), '-', copyIndex())]",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "copy":{
                "name": "asLoop",
                "count": 2
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "comments": "Default Network Security Group for template",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "[concat('default-allow-', variables('nsgOsPort')[parameters('OS')])]",
                        "properties": {
                            "priority": 1000,
                            "access": "Allow",
                            "direction": "Inbound",
                            "destinationPortRange": "[variables('nsgOsPort')[parameters('OS')]]",
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('nic', copyindex())]",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[variables('virtualNetworkName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[if(equals(mod(copyIndex(), 2),0), variables('subnetRef'), variables('subnetRef'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('myvm', copyIndex())]",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat('nic', copyIndex()))]",
                "asLoop"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(variables('availabilitySetName'), '-', mod(copyIndex(),2)))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('projectName'), parameters('os'), parameters('serial'), copyIndex(), parameters('env'))",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[parameters('imageRefId')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic', copyindex()))]"
                        }
                    ]
                }
            }
        }
    ]
}
